---
import BaseLayout from '../layouts/BaseLayout.astro';
import { FileUpload } from '../components/FileUpload';
import { UploadForm } from '../components/UploadForm';

let uploadError: string | null = null;

// Handle file upload on server side
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const file = formData.get('file') as File;
    
    if (!file || file.size === 0) {
      uploadError = 'Nebyl vybrán žádný soubor. Prosím vyberte soubor k nahrání.';
    } else {
      const allowedTypes = ['application/pdf'];
      if (!allowedTypes.includes(file.type)) {
        uploadError = 'Neplatný typ souboru. Prosím nahrajte soubor PDF.';
      } else if (file.size > 10 * 1024 * 1024) {
        uploadError = 'Soubor je příliš velký. Maximální velikost je 10MB.';
      } else {
        // Send file for validation
        const validateResponse = await fetch(`${Astro.url.origin}/api/validate-pdf`, {
          method: 'POST',
          body: formData,
        });

        if (!validateResponse.ok) {
          const error = await validateResponse.json();
          uploadError = error.error;
          console.error('Validation error:', error);
        } else {
          const validationResult = await validateResponse.json();
          
          // Redirect to check page with just the job ID
          return Astro.redirect(`/check?job=${validationResult.jobId}`, 302);
        }
      }
    }
  } catch (error) {
    console.error('Upload error:', error);
    uploadError = 'Došlo k neočekávané chybě. Prosím zkuste to znovu.';
  }
}
---

<BaseLayout title="Nahrání souboru" currentStep="upload">
  <div class="container mx-auto py-8">
    <div class="text-center mb-8">
      <h1 class="text-4xl font-bold tracking-tight mb-4">Nahrajte svůj soubor</h1>
      <p class="text-lg text-muted-foreground">
        Vyberte soubor ke zpracování.
      </p>
    </div>
    
    <div class="w-full max-w-2xl mx-auto space-y-6">
      {uploadError && (
        <div class="rounded-lg border border-destructive/50 text-destructive dark:border-destructive p-4" role="alert">
          <div class="text-sm">
            {uploadError}
          </div>
        </div>
      )}

      <!-- Enhanced form with React for client-side processing overlay -->
      <div id="enhanced-upload">
        <UploadForm client:load />
      </div>

      <!-- Fallback form for non-JS users -->
      <noscript>
        <form method="POST" enctype="multipart/form-data" class="space-y-6">
          <FileUpload />
          <div class="flex justify-center">
            <button 
              type="submit"
              class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-11 rounded-md px-8 min-w-40"
            >
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
              </svg>
              Nahrát a zpracovat
            </button>
          </div>
        </form>
      </noscript>

    </div>
  </div>
</BaseLayout>
