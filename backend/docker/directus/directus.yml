services:
  directus:
    build:
      context: ../../
      dockerfile: ./docker/directus/Dockerfile
    container_name: directus
    env_file:
      - ../../.env
    environment:
      # Database connection settings
      # DB_DATABASE, DB_USER, DB_PASSWORD are loaded from env_file
      DB_HOST: "postgres"
      DB_PORT: "5432"
      
      # Public URL for subdomain access
      PUBLIC_URL: "https://directus.${DOMAIN:-dev-dejtoai.local}"
      
      # Directus v9 Cache Configuration - Working configuration
      CACHE_ENABLED: "true"
      CACHE_STORE: "redis"
      CACHE_REDIS_HOST: "keydb"
      CACHE_REDIS_PORT: "6379"
      CACHE_REDIS_PASSWORD: "${KEYDB_PASSWORD}"

      # Cache settings
      CACHE_NAMESPACE: "directus_cache"
      
      # Redis configuration for rate limiter and synchronization
      REDIS_HOST: "keydb"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "${KEYDB_PASSWORD}"
      
      # MinIO storage settings - loaded from env_file
      # STORAGE_MINIO_KEY, STORAGE_MINIO_SECRET, STORAGE_MINIO_BUCKET, STORAGE_MINIO_ENDPOINT
      STORAGE_MINIO_ENDPOINT: "http://minio:9000"
      
      # Email settings for MailHog
      # EMAIL_SMTP_HOST: "mailhog"
    networks:
      - traefik-public
      - backend-internal
    # Expose port only for direct access (optional in production)
    # ports:
    #   - "${DIRECTUS_PORT:-8055}:8055"
    depends_on:
      postgres:
        condition: service_healthy
      keydb:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8055/server/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      
      # HTTP Router for subdomain (HTTP)
      - "traefik.http.routers.directus-http.rule=Host(`directus.${DOMAIN:-dev-dejtoai.local}`)"
      - "traefik.http.routers.directus-http.entrypoints=web"
      - "traefik.http.routers.directus-http.middlewares=security-headers@file"
      
      # HTTPS Router for subdomain
      - "traefik.http.routers.directus-https.rule=Host(`directus.${DOMAIN:-dev-dejtoai.local}`)"
      - "traefik.http.routers.directus-https.entrypoints=websecure"
      - "traefik.http.routers.directus-https.tls=true"
      - "traefik.http.routers.directus-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.directus-https.middlewares=security-headers@file"
      
      # Service definition
      - "traefik.http.services.directus.loadbalancer.server.port=8055"
      
      # Health check
      - "traefik.http.services.directus.loadbalancer.healthcheck.path=/server/ping"
      - "traefik.http.services.directus.loadbalancer.healthcheck.interval=30s"