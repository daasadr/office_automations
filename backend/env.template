# Backend Services - Environment Configuration
# Copy this file to .env and update with your values
# Command: cp env.template .env

# ============================================================================
# PROJECT CONFIGURATION
# ============================================================================
# Docker Compose project name
COMPOSE_PROJECT_NAME=office-automations

# Note: PROJECT_PREFIX is no longer used. Container names are now service names only.
PROJECT_PREFIX=office-automations

# Domain configuration (used for Directus PUBLIC_URL and Traefik)
# Development: dev-dejtoai.local (add to /etc/hosts: 127.0.0.1 dev-dejtoai.local)
# Production: dejtoai.cz
DOMAIN=dev-dejtoai.local

# ============================================================================
# DATABASE (PostgreSQL)
# ============================================================================
POSTGRES_DB=directus
POSTGRES_USER=directus
POSTGRES_PASSWORD=changeme_strong_password
POSTGRES_PORT=5432

# Alternative names (used by some services)
DB_CLIENT=pg  # Database client type for Directus
DB_HOST=localhost  # Use 'postgres' in Docker, 'localhost' for local development
DB_PORT=5432
DB_DATABASE=directus
DB_USER=directus
DB_PASSWORD=changeme_strong_password

# ============================================================================
# CACHE (KeyDB/Redis)
# ============================================================================
KEYDB_HOST=localhost  # Use 'keydb' in Docker, 'localhost' for local development
KEYDB_PASSWORD=changeme_keydb_password
KEYDB_PORT=6379

# Alternative names (used by some services)
REDIS_ENABLED=true
REDIS_HOST=localhost
REDIS_PASSWORD=changeme_keydb_password
REDIS_PORT=6379

# Cache settings
CACHE_ENABLED=true
CACHE_STORE=redis
CACHE_NAMESPACE=directus_cache
CACHE_TTL=15m  # Default cache duration
CACHE_AUTO_PURGE=true  # Automatically clear cache on data changes
CACHE_SYSTEM_TTL=1h  # How long system caches (like schema) last
CACHE_SCHEMA=true  # Cache the database schema (improves performance)
CACHE_PERMISSIONS=true  # Cache user permissions (improves performance)
CACHE_REDIS_PASSWORD=changeme_keydb_password

# ============================================================================
# OBJECT STORAGE (MinIO)
# ============================================================================
MINIO_ENDPOINT=localhost  # Use 'minio' in Docker, 'localhost' for local development
MINIO_ACCESS_KEY=changeme_minio_access
MINIO_SECRET_KEY=changeme_minio_secret_key_min_16_chars
MINIO_API_PORT=9000
MINIO_CONSOLE_PORT=9001
MINIO_USE_SSL=false  # Set to true in production with proper SSL setup
MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
# Bucket name for file storage (required for Directus file uploads)
MINIO_BUCKET=office-automation

# Storage for Directus
STORAGE_LOCATIONS=minio  # Define storage locations (comma-separated if multiple)
STORAGE_MINIO_DRIVER=s3  # Specify the S3 driver
STORAGE_MINIO_KEY=changeme_minio_access
STORAGE_MINIO_SECRET=changeme_minio_secret_key_min_16_chars
STORAGE_MINIO_BUCKET=office-automation
STORAGE_MINIO_REGION=eu-central-1  # Can be arbitrary for MinIO
STORAGE_MINIO_ENDPOINT=http://minio:9000
STORAGE_MINIO_FORCE_PATH_STYLE=true  # Required for non-AWS S3 implementations like MinIO

# ============================================================================
# DIRECTUS CMS
# ============================================================================
# Directus URL and General Configuration
DIRECTUS_URL=http://localhost:8055  # Use 'http://directus:8055' in Docker
HOST=0.0.0.0  # Listen on all interfaces within the container
PORT=8055  # Default Directus port within the container
PUBLIC_URL=http://localhost:8055  # How Directus is accessed from your browser

# Logging
LOG_LEVEL=info  # trace, debug, info, warn, error, fatal, silent
LOG_STYLE=pretty  # 'pretty' for development, 'raw' (JSON) for production

# Admin user (for initial bootstrap)
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=changeme_admin_password

# Directus secrets (generate with: openssl rand -hex 16 and openssl rand -base64 32)
KEY=changeme_generate_with_openssl_rand_hex_16
SECRET=changeme_generate_with_openssl_rand_base64_32

# API tokens
DIRECTUS_API_TOKEN=changeme_directus_api_token
DIRECTUS_TOKEN=changeme_directus_api_token

# General settings
SERVE_APP=true  # Serve the Directus Data Studio admin app
TELEMETRY=false  # Disable anonymous telemetry data collection

# Security & Authentication
ACCESS_TOKEN_TTL=1h  # How long login tokens are valid
REFRESH_TOKEN_TTL=7d  # How long refresh tokens last
SESSION_COOKIE_TTL=1d  # How long users stay logged in via cookie
REFRESH_TOKEN_COOKIE_SECURE=false  # Set to true if using HTTPS
REFRESH_TOKEN_COOKIE_SAME_SITE=Lax  # Lax, Strict, or None
SESSION_COOKIE_SECURE=false  # Set to true if using HTTPS
SESSION_COOKIE_SAME_SITE=Lax  # Lax, Strict, or None

# Content Security Policy (for Visual Editor)
CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC=http://localhost:3000
CONTENT_SECURITY_POLICY_DIRECTIVES__CONNECT_SRC='self' http://localhost:3000 https://* wss://*
CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_ANCESTORS='self' http://localhost:3000

# Rate Limiting (Using Redis)
RATE_LIMITER_ENABLED=true  # Enable IP-based rate limiting
RATE_LIMITER_STORE=redis  # Use Redis to track limits
RATE_LIMITER_POINTS=100  # Allow 100 requests...
RATE_LIMITER_DURATION=1  # ...per 1 second per IP
RATE_LIMITER_GLOBAL_ENABLED=true  # Enable global rate limiting
RATE_LIMITER_GLOBAL_POINTS=1000  # Allow 1000 requests total...
RATE_LIMITER_GLOBAL_DURATION=1  # ...per 1 second globally

# Pressure-based limiting
PRESSURE_LIMITER_ENABLED=true  # Enable pressure-based rate limiting

# CORS (Cross-Origin Resource Sharing)
CORS_ENABLED=true  # Enable CORS headers
CORS_ORIGIN=true  # Allow requests from Origin header
CORS_METHODS=GET,POST,PATCH,DELETE,OPTIONS  # Allowed HTTP methods
CORS_ALLOWED_HEADERS=Content-Type,Authorization,Accept,Origin  # Allowed request headers
CORS_EXPOSED_HEADERS=Content-Range  # Headers exposed to the browser
CORS_CREDENTIALS=true  # Allow cookies/auth headers
CORS_MAX_AGE=600  # How long preflight OPTIONS requests are cached (seconds)

# WebSockets (Using Redis)
WEBSOCKETS_ENABLED=true  # Enable WebSocket features
SYNCHRONIZATION_STORE=redis  # Use Redis for coordinating messages
WEBSOCKETS_REST_ENABLED=true  # Enable REST-like messages over WebSockets
WEBSOCKETS_GRAPHQL_ENABLED=true  # Enable GraphQL subscriptions over WebSockets
WEBSOCKETS_REST_AUTH=handshake  # Auth mode: public, handshake, or strict
WEBSOCKETS_GRAPHQL_AUTH=handshake  # Auth mode: public, handshake, or strict

# Extensions
EXTENSIONS_PATH=/directus/extensions  # Path where extensions are mounted
EXTENSIONS_AUTO_RELOAD=true  # Automatically reload extensions on changes

# GraphQL
GRAPHQL_INTROSPECTION=true  # Allow GraphQL schema introspection

# Metrics (Prometheus)
METRICS_ENABLED=true  # Enable Prometheus metrics endpoint
METRICS_SCHEDULE=*/1 * * * *  # Schedule for metrics collection (every minute)
METRICS_SERVICES=database,cache,redis,storage  # Services to collect metrics from

# Marketplace
MARKETPLACE_REGISTRY=https://registry.directus.io  # Default marketplace registry URL

# ============================================================================
# ORCHESTRATION API
# ============================================================================
# API settings
PORT=3001  # Can also use ORCHESTRATION_PORT
ORCHESTRATION_PORT=3001
NODE_ENV=development  # or production (should match root .env)
LOG_LEVEL=info  # debug, info, warn, error

# Security (generate with: openssl rand -hex 32)
API_SECRET_KEY=changeme_generate_with_openssl_rand_hex_32
WEBHOOK_SECRET=changeme_webhook_secret

# CORS - internal URLs
CORS_ORIGIN=http://localhost:3000,http://localhost:4321,http://localhost:8055

# LLM Configuration
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-2.5-flash

# Job cleanup settings
JOB_CLEANUP_ENABLED=true
JOB_CLEANUP_MAX_AGE_HOURS=24
JOB_CLEANUP_INTERVAL_HOURS=1

# ============================================================================
# EMAIL CONFIGURATION
# ============================================================================
# Email settings for Directus
EMAIL_FROM=info@example.com  # Default sender address
EMAIL_TRANSPORT=smtp  # Use SMTP protocol
EMAIL_SMTP_HOST=mailhog  # Use 'mailhog' in Docker, or your SMTP server
EMAIL_SMTP_PORT=1025  # MailHog SMTP port (use 587 for production SMTP)
EMAIL_SMTP_SECURE=false  # Set to true for production SMTP with TLS
EMAIL_SMTP_IGNORE_TLS=true  # Set to false for production SMTP
EMAIL_VERIFY_SETUP=false  # Skip email verification check on startup
EMAIL_SMTP_USER=  # SMTP username (if required)
EMAIL_SMTP_PASSWORD=  # SMTP password (if required)

# MailHog (Development Only)
MAILHOG_SMTP_PORT=1025  # Host port mapping
MAILHOG_UI_PORT=8025  # MailHog web UI port

# ============================================================================
# NOTIFICATIONS (Optional)
# ============================================================================
SLACK_WEBHOOK_URL=  # Slack webhook URL for notifications (optional)

# ============================================================================
# TEMPORAL (Future)
# ============================================================================
TEMPORAL_NAMESPACE=default
TEMPORAL_TASK_QUEUE=document-processing
TEMPORAL_PORT=7233
TEMPORAL_UI_PORT=8085

# ============================================================================
# DOCKER BUILD SETTINGS
# ============================================================================
DOCKER_BUILD_TARGET=production  # or development

# ============================================================================
# QUICK SETUP COMMANDS
# ============================================================================
# Generate secrets:
# KEY=$(openssl rand -hex 16)
# SECRET=$(openssl rand -base64 32)
# API_SECRET_KEY=$(openssl rand -hex 32)
# WEBHOOK_SECRET=$(openssl rand -hex 32)
#
# Generate passwords:
# POSTGRES_PASSWORD=$(openssl rand -base64 24)
# KEYDB_PASSWORD=$(openssl rand -base64 24)
# MINIO_ACCESS_KEY=$(openssl rand -base64 16)
# MINIO_SECRET_KEY=$(openssl rand -base64 32)
# ADMIN_PASSWORD=$(openssl rand -base64 16)

