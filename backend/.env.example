# ------------------------------------------------------------------------------------------------------------------------
# IMPORTANT
#
# Modify only uncommented lines unless you know need to change defaults.
# ------------------------------------------------------------------------------------------------------------------------
PROJECT_PREFIX="" # FIXME
SECRET="" # openssl rand -hex 64

# ----------------------------------------
# PostgreSQL (Used by Directus DB & potentially Pgpool)
# ----------------------------------------
POSTGRES_DB="app"
POSTGRES_USER="app"
POSTGRES_PASSWORD="" # openssl rand -hex 64
POSTGRES_PORT=5432

# ----------------------------------------
# KeyDB 
# ----------------------------------------
KEYDB_PASSWORD="" # openssl rand -hex 64
KEYDB_PORT=6379

# ----------------------------------------
# Directus: Redis Connection (for Cache, Rate Limiter, WebSockets)
# ----------------------------------------
REDIS_ENABLED="true"
REDIS_PORT=6379
# REDIS_HOST="keydb"
# REDIS_PASSWORD=""
# REDIS_USERNAME=""
# REDIS_DB=0

# ----------------------------------------
# MinIO (Used by Directus for File Storage)
# ----------------------------------------
MINIO_ACCESS_KEY="" # openssl rand -hex 64
MINIO_SECRET_KEY="" # openssl rand -hex 64
MINIO_API_PORT=9000 
MINIO_CONSOLE_PORT=9001
MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
# MINIO_BUCKET="" # This is set to PROJECT_PREFIX

# ------------------------------------------------------------------------------------------------------------------------
# Note: The following settings are for Directus configuration.
# IT IS NOT NECESSARY TO CHANGE THESE UNLESS YOU NEED TO.
#
# Some keys would overwrite the default values in the .yml config in environment variables.
# ------------------------------------------------------------------------------------------------------------------------

# ----------------------------------------
# MailHog (Used by Directus for Email)
# ----------------------------------------
MAILHOG_SMTP_PORT=1025 # Host port mapping (Directus connects internally)
MAILHOG_UI_PORT=8025

# ----------------------------------------
# Directus: Database Connection (PostgreSQL)
# ----------------------------------------
DB_CLIENT="pg"                 # Database type
# DB_HOST="directus-postgres"    # Docker service name for your PostgreSQL container
# DB_PORT=5432                   # Internal PostgreSQL port within the Docker network
# DB_DATABASE="directus"         # Must match POSTGRES_DB
# DB_USER="directus"             # Must match POSTGRES_USER
# DB_PASSWORD="directus"         # Must match POSTGRES_PASSWORD
# DB_CONNECTION_STRING=""      # Alternative to individual settings
# DB_POOL__MIN=2               # Example: Min connections in pool
# DB_POOL__MAX=10              # Example: Max connections in pool
# DB_SSL__REJECT_UNAUTHORIZED="false" # Example: If using self-signed certs for DB SSL (not common in local Docker)

# ----------------------------------------
# Directus: Visual Editor
# ----------------------------------------
CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC="http://localhost:3000"
CONTENT_SECURITY_POLICY_DIRECTIVES__CONNECT_SRC="'self' http://localhost:3000 https://* wss://*"
CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_ANCESTORS="'self' http://localhost:3000"

# ----------------------------------------
# Directus: General Configuration
# ----------------------------------------
HOST="0.0.0.0"                 # Listen on all interfaces within the container
PORT=8055                      # Default Directus port within the container
PUBLIC_URL="http://localhost:8055" # CRITICAL: How Directus is accessed from your browser. Used for redirects, emails etc.
LOG_LEVEL="info"               # Logging detail: trace, debug, info, warn, error, fatal, silent. 'debug' is useful for deeper issues.
LOG_STYLE="pretty"             # Log format: 'pretty' for development, 'raw' (JSON) for production/log aggregators
# MAX_PAYLOAD_SIZE="1mb"         # Max request body size (adjust if needed for large uploads/requests)
# ROOT_REDIRECT="/admin"       # Redirect '/' to '/admin' (Directus default)
SERVE_APP="true"               # Serve the Directus Data Studio admin app
TELEMETRY="false"              # Disable anonymous telemetry data collection for local dev

# ----------------------------------------
# Directus: Security
# ----------------------------------------
SECRET="" # IMPORTANT: Generate a strong unique secret! Essential for security (JWT, hashing). You can use `openssl rand -hex 64` to generate one.
ACCESS_TOKEN_TTL="1h"          # How long login tokens are valid (e.g., 15m, 1h, 1d)
REFRESH_TOKEN_TTL="7d"         # How long refresh tokens last (used to get new access tokens)
SESSION_COOKIE_TTL="1d"        # How long users stay logged into the Admin App via cookie
REFRESH_TOKEN_COOKIE_SECURE="false" # Use 'true' ONLY if PUBLIC_URL uses HTTPS
REFRESH_TOKEN_COOKIE_SAME_SITE="Lax" # 'Lax' is usually fine for dev, 'Strict'/'None' have specific use cases
# REFRESH_TOKEN_COOKIE_DOMAIN="" # Usually not needed for localhost dev
# REFRESH_TOKEN_COOKIE_NAME="directus_refresh_token" # Default name
SESSION_COOKIE_SECURE="false"  # Use 'true' ONLY if PUBLIC_URL uses HTTPS
SESSION_COOKIE_SAME_SITE="Lax" # 'Lax' is usually fine for dev
# SESSION_COOKIE_DOMAIN=""     # Usually not needed for localhost dev
# SESSION_COOKIE_NAME="directus_session_token" # Default name
# PASSWORD_RESET_URL_ALLOW_LIST="" # Add frontend URLs that can initiate password resets if needed
# USER_INVITE_URL_ALLOW_LIST=""    # Add frontend URLs for user invites if needed
# IP_TRUST_PROXY="true"        # Default, usually correct when behind a reverse proxy (like Docker networking often acts)

# ----------------------------------------
# Directus: Cache (Using KeyDB/Redis)
# ----------------------------------------
CACHE_ENABLED="true"           # Enable Directus caching
CACHE_STORE="redis"            # Use Redis (KeyDB) for caching
# CACHE_NAMESPACE="directus_cache" # Prefix for cache keys in Redis
CACHE_TTL="15m"                # Default cache duration (e.g., 5m, 15m, 1h)
CACHE_AUTO_PURGE="true"        # Automatically clear cache on data changes (recommended)
# CACHE_AUTO_PURGE_IGNORE_LIST="directus_activity,directus_presets" # Default collections ignored by auto-purge
CACHE_SYSTEM_TTL="1h"          # How long system caches (like schema) last
CACHE_SCHEMA="true"            # Cache the database schema (improves performance)
CACHE_PERMISSIONS="true"       # Cache user permissions (improves performance)
# CACHE_QUERY_TTL="1m"         # Example: Specific TTL for query cache if needed
# CACHE_STATUS_HEADER="X-Directus-Cache" # Optional: Header showing HIT/MISS status
# CACHE_SKIP_ALLOWED="true"    # Allow requests to bypass cache with Cache-Control: no-store


# ----------------------------------------
# Directus: Rate Limiting (Using Redis)
# ----------------------------------------
RATE_LIMITER_ENABLED="true"    # Enable IP-based rate limiting
RATE_LIMITER_STORE="redis"     # Use Redis to track limits across instances (even if only one instance now)
RATE_LIMITER_POINTS=100        # Allow 100 requests...
RATE_LIMITER_DURATION=1        # ...per 1 second per IP (adjust as needed for dev)
RATE_LIMITER_GLOBAL_ENABLED="true" # Enable global rate limiting (total requests)
RATE_LIMITER_GLOBAL_POINTS=1000 # Allow 1000 requests total...
RATE_LIMITER_GLOBAL_DURATION=1  # ...per 1 second globally
# RATE_LIMITER_REGISTRATION_ENABLED="true" # Default, limit registration attempts
# RATE_LIMITER_REGISTRATION_POINTS=5     # Default
# RATE_LIMITER_REGISTRATION_DURATION=60  # Default

# Pressure-based (helps prevent overload)
PRESSURE_LIMITER_ENABLED="true" # Enable pressure-based rate limiting
# PRESSURE_LIMITER_MAX_EVENT_LOOP_DELAY=500 # Default
# PRESSURE_LIMITER_MAX_EVENT_LOOP_UTILIZATION=0.99 # Default

# ----------------------------------------
# Directus: File Storage (Using MinIO)
# ----------------------------------------
STORAGE_LOCATIONS="minio"         # Define one or more storage locations (comma-separated if multiple)
STORAGE_MINIO_DRIVER="s3"         # Specify the S3 driver for the 'minio' location
# STORAGE_MINIO_KEY="minioadmin"    # Must match MINIO_ACCESS_KEY
# STORAGE_MINIO_SECRET="minioadmin" # Must match MINIO_SECRET_KEY
# STORAGE_MINIO_BUCKET="directus"    # Must match MINIO_BUCKET
STORAGE_MINIO_REGION="us-east-1"  # Can often be arbitrary for MinIO, but needs a value
# STORAGE_MINIO_ENDPOINT="http://minio:9000" # Internal Docker URL for MinIO API. Use http, not https.
# STORAGE_MINIO_PORT=9000         # Often inferred from endpoint, but can be explicit
# STORAGE_MINIO_USE_SSL="false"   # Set to false for local http MinIO endpoint
STORAGE_MINIO_FORCE_PATH_STYLE="true" # Usually required for non-AWS S3 implementations like MinIO

# File Handling Settings
# FILES_MAX_UPLOAD_SIZE="100mb"   # Example: Increase max upload size
# FILES_MIME_TYPE_ALLOW_LIST="image/*,application/pdf" # Example: Restrict allowed upload types

# ----------------------------------------
# Directus: Email (Using MailHog)
# ----------------------------------------
EMAIL_FROM="admin@directus.local" # Default sender address
EMAIL_TRANSPORT="smtp"          # Use SMTP protocol
EMAIL_SMTP_HOST="mailhog"       # Docker service name for your MailHog container
EMAIL_SMTP_PORT=1025            # Internal MailHog SMTP port within the Docker network
EMAIL_SMTP_SECURE="false"       # MailHog doesn't use TLS by default
EMAIL_SMTP_IGNORE_TLS="true"    # Don't attempt STARTTLS with MailHog
# EMAIL_SMTP_POOL="false"       # Pooling usually not needed for dev
# EMAIL_SMTP_USER=""            # MailHog doesn't require auth
# EMAIL_SMTP_PASSWORD=""        # MailHog doesn't require auth
EMAIL_VERIFY_SETUP="false"      # Skip email verification check on startup for MailHog

# ----------------------------------------
# Directus: CORS (Cross-Origin Resource Sharing)
# ----------------------------------------
CORS_ENABLED="true"            # Enable CORS headers
CORS_ORIGIN="true"             # Allow requests from the Origin header (easiest for dev). Or list specific origins: "http://localhost:3000,http://localhost:8080"
CORS_METHODS="GET,POST,PATCH,DELETE,OPTIONS" # Allowed HTTP methods
CORS_ALLOWED_HEADERS="Content-Type,Authorization,Accept,Origin" # Allowed request headers
CORS_EXPOSED_HEADERS="Content-Range" # Headers exposed to the browser
CORS_CREDENTIALS="true"        # Allow cookies/auth headers to be sent
CORS_MAX_AGE=600               # How long preflight OPTIONS requests are cached (seconds)

# ----------------------------------------
# Directus: Admin User Bootstrap
# ----------------------------------------
# These create the first admin user on initial startup if the database is empty.
# Set these only for the very first time you run `directus bootstrap` or start the container.
# You might want to comment these out after the first successful run.
ADMIN_EMAIL="admin@example.com"
ADMIN_PASSWORD="password" # Choose a secure password even for local dev!

# ----------------------------------------
# Directus: WebSockets (Using Redis)
# ----------------------------------------
WEBSOCKETS_ENABLED="true"        # Enable WebSocket features
SYNCHRONIZATION_STORE="redis"    # Use Redis for coordinating messages between instances (needed even for one instance if using WS)
# SYNCHRONIZATION_NAMESPACE="directus_sync" # Optional Redis key prefix for sync messages
WEBSOCKETS_REST_ENABLED="true"   # Enable REST-like messages over WebSockets
WEBSOCKETS_GRAPHQL_ENABLED="true" # Enable GraphQL subscriptions over WebSockets
# WEBSOCKETS_LOGS_ENABLED="true" # Enable streaming logs over WebSockets (requires admin auth)
# WEBSOCKETS_HEARTBEAT_PERIOD=30 # Ping interval in seconds

# Auth modes: 'public', 'handshake' (auth message after connect), 'strict' (requires valid token on connect)
WEBSOCKETS_REST_AUTH="handshake"
WEBSOCKETS_GRAPHQL_AUTH="handshake"

# ----------------------------------------
# Directus: Extensions
# ----------------------------------------
EXTENSIONS_PATH="/directus/extensions" # Default path inside the container where extensions are mounted/copied
EXTENSIONS_AUTO_RELOAD="true"      # Automatically reload extensions on changes (great for dev!)
# EXTENSIONS_MUST_LOAD="false"     # Default, server starts even if an extension fails
# EXTENSIONS_CACHE_TTL="5m"        # Browser cache duration for custom App extensions code

# ----------------------------------------
# Directus: GraphQL
# ----------------------------------------
GRAPHQL_INTROSPECTION="true"   # Allow GraphQL schema introspection (useful for dev tools)
# GRAPHQL_SCHEMA_CACHE_CAPACITY=100 # Default
# GRAPHQL_QUERY_TOKEN_LIMIT=5000  # Default query complexity limit

# ----------------------------------------
# Directus: Assets / Transformations
# ----------------------------------------
# ASSETS_CACHE_TTL="30d"         # Default browser cache for assets
# ASSETS_TRANSFORM_MAX_CONCURRENT=25 # Default
# ASSETS_TRANSFORM_IMAGE_MAX_DIMENSION=6000 # Default max width/height for transforms
# ASSETS_INVALID_IMAGE_SENSITIVITY_LEVEL="warning" # Default

# ----------------------------------------
# Directus: Authentication Providers (Example - Default is enabled)
# ----------------------------------------
# AUTH_PROVIDERS=""              # Leave empty or unset to only use default email/password
# AUTH_DISABLE_DEFAULT="false"   # Keep default email/password login enabled

# --- Add SSO provider configs below if needed, following docs ---
# Example GitHub SSO (requires creating GitHub OAuth App):
# AUTH_PROVIDERS="github"
# AUTH_GITHUB_DRIVER="oauth2"
# AUTH_GITHUB_CLIENT_ID="YOUR_GITHUB_CLIENT_ID"
# AUTH_GITHUB_CLIENT_SECRET="YOUR_GITHUB_CLIENT_SECRET"
# AUTH_GITHUB_AUTHORIZE_URL="https://github.com/login/oauth/authorize"
# AUTH_GITHUB_ACCESS_URL="https://github.com/login/oauth/access_token"
# AUTH_GITHUB_PROFILE_URL="https://api.github.com/user"
# AUTH_GITHUB_SCOPE="read:user user:email"
# AUTH_GITHUB_ALLOW_PUBLIC_REGISTRATION="false" # Set true to allow any GitHub user to register
# AUTH_GITHUB_DEFAULT_ROLE_ID="YOUR_DEFAULT_ROLE_UUID_HERE" # Assign a role UUID if public reg is true

# --- Metrics: Prometheus ----------------------------------
METRICS_ENABLED="true" # Enable Prometheus metrics endpoint
METRICS_SCHEDULE="*/1 * * * *" # Default schedule for metrics collection (every minute)
#METRICS_TOKENS = "directus" # Optional: Token for metrics endpoint (if needed)
METRICS_SERVICES="database,cache,redis,storage" # Services to collect metrics from (comma-separated)
# --- Add other sections like Hashing, Data Retention, Flows as needed ---

MARKETPLACE_REGISTRY="https://registry.directus.io" # Default marketplace registry URL