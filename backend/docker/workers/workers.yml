services:
  # Unified worker that handles all activity types
  unified-worker:
    build:
      context: ../../workers
      dockerfile: Dockerfile
    container_name: ${PROJECT_PREFIX}-unified-worker
    env_file:
      - ../../.env
    environment:
      # Temporal connection
      TEMPORAL_ADDRESS: ${PROJECT_PREFIX}-temporal:7233
      TEMPORAL_NAMESPACE: default
      
      # Database connection
      DB_HOST: ${PROJECT_PREFIX}-postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      
      # Storage connection
      S3_ENDPOINT: http://${PROJECT_PREFIX}-minio:9000
      S3_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      S3_SECRET_KEY: ${MINIO_SECRET_KEY}
      S3_BUCKET: ${PROJECT_PREFIX}
      
      # LLM settings
      
      
      # OCR settings
      # TESSERACT_LANG: ${TESSERACT_LANG:-ces+eng}
      
      # External validation APIs (optional)
      # VALIDATION_API_KEY: ${VALIDATION_API_KEY}
      
      # Notification settings (optional)
      # SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      # EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      # EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT:-587}
      # EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      # EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      # EMAIL_FROM: ${EMAIL_FROM}
      
      # Integration settings (optional)
      SFTP_ENABLED: ${SFTP_ENABLED:-false}
      API_INTEGRATIONS_ENABLED: ${API_INTEGRATIONS_ENABLED:-false}
      
      # Worker settings
      NODE_ENV: ${NODE_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      temporal:
        condition: service_healthy
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      replicas: ${UNIFIED_WORKER_REPLICAS:-1}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


